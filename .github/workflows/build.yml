# Automatically build the project and run any configured tests for every push
# and submitted pull request. This can help catch issues that only occur on
# certain platforms or Java versions, and provides a first line of defence
# against bad commits.

name: build
on:
  pull_request:
    branches:
      - 'main'
  push:
    tags-ignore:
      - '**'

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1

  build:
    needs: validate
    strategy:
      matrix:
        java: [17]
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup jdk ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: ${{ matrix.java }}

      - name: Build artifacts
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build

      - name: Capture build artifacts
        if: ${{ runner.os == 'Linux' && matrix.java == '17' }}
        uses: actions/upload-artifact@v3
        with:
          name: Artifacts
          path: build/libs/

  # test-fabric:
  #   needs: build
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       java: [17]
  #       minecraftVersion: [1.19, 1.19.1, latest]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3

  #     - name: Setup jdk ${{ matrix.java }}
  #       uses: actions/setup-java@v3
  #       with:
  #         distribution: temurin
  #         java-version: ${{ matrix.java }}

  #     - name: "Run Fabric Tests"
  #       uses: SiskSjet/fabric-test-runner@v1
  #       with:
  #         minecraftVersion: ${{ matrix.minecraftVersion }}
